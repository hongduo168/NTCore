// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using NTCore.DataAccess;
using NTCore.DataModel;
using System;

namespace NTCore.WebFront.Migrations
{
    [DbContext(typeof(MainContext))]
    [Migration("20171130053548_u1")]
    partial class u1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NTCore.DataModel.ActionRecordInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<int>("CreatorId")
                        .HasColumnName("creator_id");

                    b.Property<int>("DataSort")
                        .HasColumnName("data_sort");

                    b.Property<int>("DataState")
                        .HasColumnName("data_state");

                    b.Property<int>("DataType")
                        .HasColumnName("data_type");

                    b.Property<int>("HotelId")
                        .HasColumnName("hotel_id");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnName("content_text")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("TypeId")
                        .IsRequired()
                        .HasColumnName("typeid")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("update_time");

                    b.Property<int>("UpdaterId")
                        .HasColumnName("updater_id");

                    b.HasKey("Id");

                    b.ToTable("action_record");
                });

            modelBuilder.Entity("NTCore.DataModel.AssignRoomHistoryInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<decimal>("Coefficient")
                        .HasColumnName("coefficient")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<int>("CreatorId")
                        .HasColumnName("creator_id");

                    b.Property<int>("DataSort")
                        .HasColumnName("data_sort");

                    b.Property<int>("DataState")
                        .HasColumnName("data_state");

                    b.Property<DateTime>("Deadline")
                        .HasColumnName("deadline");

                    b.Property<DateTime>("FromTime")
                        .HasColumnName("fromtime");

                    b.Property<int>("HotelId")
                        .HasColumnName("hotel_id");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnName("room_number")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("update_time");

                    b.Property<int>("UpdaterId")
                        .HasColumnName("updater_id");

                    b.Property<int>("UserId")
                        .HasColumnName("userid");

                    b.HasKey("Id");

                    b.ToTable("assign_room_history");
                });

            modelBuilder.Entity("NTCore.DataModel.AssignRoomInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("AssignTime")
                        .HasColumnName("assign_time");

                    b.Property<decimal>("Coefficient")
                        .HasColumnName("coefficient")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<int>("CreatorId")
                        .HasColumnName("creator_id");

                    b.Property<int>("DataSort")
                        .HasColumnName("data_sort");

                    b.Property<int>("DataState")
                        .HasColumnName("data_state");

                    b.Property<int>("HotelId")
                        .HasColumnName("hotel_id");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnName("room_number")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("RoomStatus")
                        .IsRequired()
                        .HasColumnName("room_status")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("update_time");

                    b.Property<int>("UpdaterId")
                        .HasColumnName("updater_id");

                    b.Property<int>("UserId")
                        .HasColumnName("userid");

                    b.HasKey("Id");

                    b.ToTable("assign_room");
                });

            modelBuilder.Entity("NTCore.DataModel.AttachmentInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<int>("CreatorId")
                        .HasColumnName("creator_id");

                    b.Property<int>("DataSort")
                        .HasColumnName("data_sort");

                    b.Property<int>("DataState")
                        .HasColumnName("data_state");

                    b.Property<string>("DirPath")
                        .IsRequired()
                        .HasColumnName("dir_path")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("FullUrl")
                        .IsRequired()
                        .HasColumnName("full_url")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("HotelId")
                        .HasColumnName("hotel_id");

                    b.Property<int>("RelationId")
                        .HasColumnName("relation_id");

                    b.Property<int>("RelationType")
                        .HasColumnName("relation_Type");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("update_time");

                    b.Property<int>("UpdaterId")
                        .HasColumnName("updater_id");

                    b.HasKey("Id");

                    b.ToTable("attachment");
                });

            modelBuilder.Entity("NTCore.DataModel.CustomerRequestInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("AssignUserId")
                        .HasColumnName("assign_userid");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<int>("CreatorId")
                        .HasColumnName("creator_id");

                    b.Property<int>("DataSort")
                        .HasColumnName("data_sort");

                    b.Property<int>("DataState")
                        .HasColumnName("data_state");

                    b.Property<int>("DataType")
                        .HasColumnName("data_type");

                    b.Property<DateTime>("ExpectTime")
                        .HasColumnName("expect_time");

                    b.Property<int>("FinishStatus")
                        .HasColumnName("finish_status");

                    b.Property<int>("HotelId")
                        .HasColumnName("hotel_id");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnName("message_text")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnName("room_number")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("update_time");

                    b.Property<int>("UpdaterId")
                        .HasColumnName("updater_id");

                    b.HasKey("Id");

                    b.ToTable("customer_request");
                });

            modelBuilder.Entity("NTCore.DataModel.CustomerRequestItemInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<int>("CreatorId")
                        .HasColumnName("creator_id");

                    b.Property<int>("CustomerRequestDefineId")
                        .HasColumnName("customer_request_define_id");

                    b.Property<int>("CustomerRequestId")
                        .HasColumnName("customer_request_id");

                    b.Property<int>("DataSort")
                        .HasColumnName("data_sort");

                    b.Property<int>("DataState")
                        .HasColumnName("data_state");

                    b.Property<int>("HotelId")
                        .HasColumnName("hotel_id");

                    b.Property<int>("Quantity")
                        .HasColumnName("quantity");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("update_time");

                    b.Property<int>("UpdaterId")
                        .HasColumnName("updater_id");

                    b.HasKey("Id");

                    b.ToTable("customer_request_item");
                });

            modelBuilder.Entity("NTCore.DataModel.HotelInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Appid")
                        .IsRequired()
                        .HasColumnName("appid")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Appkey")
                        .IsRequired()
                        .HasColumnName("appkey")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Background")
                        .IsRequired()
                        .HasColumnName("background")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<int>("CreatorId")
                        .HasColumnName("creator_id");

                    b.Property<int>("DataSort")
                        .HasColumnName("data_sort");

                    b.Property<int>("DataState")
                        .HasColumnName("data_state");

                    b.Property<string>("HotelCode")
                        .IsRequired()
                        .HasColumnName("hotel_code")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("HotelName")
                        .IsRequired()
                        .HasColumnName("hotel_name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("InterfaceUrl")
                        .IsRequired()
                        .HasColumnName("interface_url")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("ProductId")
                        .HasColumnName("product_id");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("update_time");

                    b.Property<int>("UpdaterId")
                        .HasColumnName("updater_id");

                    b.HasKey("Id");

                    b.ToTable("hotel");
                });

            modelBuilder.Entity("NTCore.DataModel.HotelRoleInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<int>("CreatorId")
                        .HasColumnName("creator_id");

                    b.Property<int>("DataSort")
                        .HasColumnName("data_sort");

                    b.Property<int>("DataState")
                        .HasColumnName("data_state");

                    b.Property<int>("HotelId")
                        .HasColumnName("hotel_id");

                    b.Property<int>("RoleName")
                        .HasColumnName("role_name");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("update_time");

                    b.Property<int>("UpdaterId")
                        .HasColumnName("updater_id");

                    b.HasKey("Id");

                    b.ToTable("hotel_role");
                });

            modelBuilder.Entity("NTCore.DataModel.HotelRoomInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<decimal>("Coefficient")
                        .HasColumnName("coefficient")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<int>("CreatorId")
                        .HasColumnName("creator_id");

                    b.Property<int>("DataSort")
                        .HasColumnName("data_sort");

                    b.Property<int>("DataState")
                        .HasColumnName("data_state");

                    b.Property<int>("HotelId")
                        .HasColumnName("hotel_id");

                    b.Property<bool>("IsChecked")
                        .HasColumnName("is_checked")
                        .HasColumnType("bit")
                        .HasMaxLength(30);

                    b.Property<bool>("IsCleaning")
                        .HasColumnName("is_cleaning")
                        .HasColumnType("bit")
                        .HasMaxLength(30);

                    b.Property<bool>("IsContradiction")
                        .HasColumnName("is_contradiction")
                        .HasColumnType("bit")
                        .HasMaxLength(30);

                    b.Property<bool>("IsDueIn")
                        .HasColumnName("is_due_in")
                        .HasColumnType("bit")
                        .HasMaxLength(30);

                    b.Property<bool>("IsDueOut")
                        .HasColumnName("is_due_out")
                        .HasColumnType("bit")
                        .HasMaxLength(30);

                    b.Property<bool>("IsRush")
                        .HasColumnName("is_rush")
                        .HasColumnType("bit")
                        .HasMaxLength(30);

                    b.Property<string>("PmsRoomNumber")
                        .IsRequired()
                        .HasColumnName("pms_room_number")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnName("room_number")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("RoomStatus")
                        .IsRequired()
                        .HasColumnName("room_status")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("RoomTypeCode")
                        .IsRequired()
                        .HasColumnName("room_type_code")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("update_time");

                    b.Property<int>("UpdaterId")
                        .HasColumnName("updater_id");

                    b.HasKey("Id");

                    b.ToTable("hotel_room");
                });

            modelBuilder.Entity("NTCore.DataModel.HotelSupplyDefineInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<int>("CreatorId")
                        .HasColumnName("creator_id");

                    b.Property<string>("DataCode")
                        .IsRequired()
                        .HasColumnName("data_code")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("DataName")
                        .IsRequired()
                        .HasColumnName("data_name")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("DataNote")
                        .IsRequired()
                        .HasColumnName("data_note")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int>("DataSort")
                        .HasColumnName("data_sort");

                    b.Property<int>("DataState")
                        .HasColumnName("data_state");

                    b.Property<int>("DataType")
                        .HasColumnName("data_type");

                    b.Property<int>("HotelId")
                        .HasColumnName("hotel_id");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("update_time");

                    b.Property<int>("UpdaterId")
                        .HasColumnName("updater_id");

                    b.HasKey("Id");

                    b.ToTable("hotel_supply_define");
                });

            modelBuilder.Entity("NTCore.DataModel.HotelUserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<int>("CreatorId")
                        .HasColumnName("creator_id");

                    b.Property<int>("DataSort")
                        .HasColumnName("data_sort");

                    b.Property<int>("DataState")
                        .HasColumnName("data_state");

                    b.Property<int>("HotelId")
                        .HasColumnName("hotel_id");

                    b.Property<int>("RoleId")
                        .HasColumnName("roleid");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("update_time");

                    b.Property<int>("UpdaterId")
                        .HasColumnName("updater_id");

                    b.Property<int>("UserId")
                        .HasColumnName("userid");

                    b.HasKey("Id");

                    b.ToTable("hotel_user");
                });

            modelBuilder.Entity("NTCore.DataModel.MessageCenterInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<int>("CreatorId")
                        .HasColumnName("creator_id");

                    b.Property<int>("DataSort")
                        .HasColumnName("data_sort");

                    b.Property<int>("DataState")
                        .HasColumnName("data_state");

                    b.Property<int>("HotelId")
                        .HasColumnName("hotel_id");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnName("template_text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("update_time");

                    b.Property<int>("UpdaterId")
                        .HasColumnName("updater_id");

                    b.HasKey("Id");

                    b.ToTable("message_center");
                });

            modelBuilder.Entity("NTCore.DataModel.MessageReceiverInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<int>("CreatorId")
                        .HasColumnName("creator_id");

                    b.Property<int>("DataSort")
                        .HasColumnName("data_sort");

                    b.Property<int>("DataState")
                        .HasColumnName("data_state");

                    b.Property<int>("HotelId")
                        .HasColumnName("hotel_id");

                    b.Property<int>("MessageCenterId")
                        .HasColumnName("message_center_id");

                    b.Property<DateTime>("SendTime")
                        .HasColumnName("send_time");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("update_time");

                    b.Property<int>("UpdaterId")
                        .HasColumnName("updater_id");

                    b.Property<int>("UserId")
                        .HasColumnName("userid");

                    b.HasKey("Id");

                    b.ToTable("message_receiver");
                });

            modelBuilder.Entity("NTCore.DataModel.MessageTemplateInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<int>("CreatorId")
                        .HasColumnName("creator_id");

                    b.Property<int>("DataSort")
                        .HasColumnName("data_sort");

                    b.Property<int>("DataState")
                        .HasColumnName("data_state");

                    b.Property<int>("GroupType")
                        .HasColumnName("group_type");

                    b.Property<int>("HotelId")
                        .HasColumnName("hotel_id");

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .HasColumnName("template_name")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("TemplateText")
                        .IsRequired()
                        .HasColumnName("template_text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("update_time");

                    b.Property<int>("UpdaterId")
                        .HasColumnName("updater_id");

                    b.HasKey("Id");

                    b.ToTable("message_template");
                });

            modelBuilder.Entity("NTCore.DataModel.MinibarConsumeInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<int>("CreatorId")
                        .HasColumnName("creator_id");

                    b.Property<int>("DataSort")
                        .HasColumnName("data_sort");

                    b.Property<int>("DataState")
                        .HasColumnName("data_state");

                    b.Property<int>("FinishStatus")
                        .HasColumnName("finish_status");

                    b.Property<int>("HotelId")
                        .HasColumnName("hotel_id");

                    b.Property<bool>("IsClosed")
                        .HasColumnName("is_closed");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnName("room_number")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<decimal>("TotalPrice")
                        .HasColumnName("total_price")
                        .HasColumnType("decimal(12,2)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("update_time");

                    b.Property<int>("UpdaterId")
                        .HasColumnName("updater_id");

                    b.HasKey("Id");

                    b.ToTable("minibar_consume");
                });

            modelBuilder.Entity("NTCore.DataModel.MinibarConsumeItemInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<int>("CreatorId")
                        .HasColumnName("creator_id");

                    b.Property<int>("DataSort")
                        .HasColumnName("data_sort");

                    b.Property<int>("DataState")
                        .HasColumnName("data_state");

                    b.Property<int>("HotelId")
                        .HasColumnName("hotel_id");

                    b.Property<int>("MinibarConsumeId")
                        .HasColumnName("minibar_consume_id");

                    b.Property<int>("MinibarProductId")
                        .HasColumnName("minibar_product_id");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnName("product_price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Quantity")
                        .HasColumnName("quantity");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("update_time");

                    b.Property<int>("UpdaterId")
                        .HasColumnName("updater_id");

                    b.HasKey("Id");

                    b.ToTable("minibar_cunsume_item");
                });

            modelBuilder.Entity("NTCore.DataModel.MinibarProductInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<int>("CreatorId")
                        .HasColumnName("creator_id");

                    b.Property<int>("DataSort")
                        .HasColumnName("data_sort");

                    b.Property<int>("DataState")
                        .HasColumnName("data_state");

                    b.Property<int>("HotelId")
                        .HasColumnName("hotel_id");

                    b.Property<int>("MinibarId")
                        .HasColumnName("minibar_id");

                    b.Property<int>("PackageCount")
                        .HasColumnName("package_count");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnName("product_code")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnName("product_name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("ProductPrice")
                        .HasColumnName("product_price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasColumnName("unit_name")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("update_time");

                    b.Property<int>("UpdaterId")
                        .HasColumnName("updater_id");

                    b.HasKey("Id");

                    b.ToTable("minibar_product");
                });

            modelBuilder.Entity("NTCore.DataModel.MinibarTypeInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<int>("CreatorId")
                        .HasColumnName("creator_id");

                    b.Property<int>("DataSort")
                        .HasColumnName("data_sort");

                    b.Property<int>("DataState")
                        .HasColumnName("data_state");

                    b.Property<int>("HotelId")
                        .HasColumnName("hotel_id");

                    b.Property<string>("MinibarName")
                        .IsRequired()
                        .HasColumnName("minibar_name")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("update_time");

                    b.Property<int>("UpdaterId")
                        .HasColumnName("updater_id");

                    b.HasKey("Id");

                    b.ToTable("minibar_type");
                });

            modelBuilder.Entity("NTCore.DataModel.PmsProductDefineInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Appid")
                        .IsRequired()
                        .HasColumnName("appid")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Appkey")
                        .IsRequired()
                        .HasColumnName("appkey")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<int>("CreatorId")
                        .HasColumnName("creator_id");

                    b.Property<int>("DataSort")
                        .HasColumnName("data_sort");

                    b.Property<int>("DataState")
                        .HasColumnName("data_state");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnName("product_name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnName("source")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnName("token")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int>("TokenEffectiveSecond")
                        .HasColumnName("token_effective_second");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("update_time");

                    b.Property<int>("UpdaterId")
                        .HasColumnName("updater_id");

                    b.HasKey("Id");

                    b.ToTable("pms_product_define");
                });

            modelBuilder.Entity("NTCore.DataModel.RepairPlaceDefineInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<int>("CreatorId")
                        .HasColumnName("creator_id");

                    b.Property<int>("DataSort")
                        .HasColumnName("data_sort");

                    b.Property<int>("DataState")
                        .HasColumnName("data_state");

                    b.Property<int>("HotelId")
                        .HasColumnName("hotel_id");

                    b.Property<int>("ParentId")
                        .HasColumnName("parent_id");

                    b.Property<string>("PlaceName")
                        .IsRequired()
                        .HasColumnName("place_name")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("update_time");

                    b.Property<int>("UpdaterId")
                        .HasColumnName("updater_id");

                    b.HasKey("Id");

                    b.ToTable("repair_place_define");
                });

            modelBuilder.Entity("NTCore.DataModel.RoomMinibarInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<int>("CreatorId")
                        .HasColumnName("creator_id");

                    b.Property<int>("DataSort")
                        .HasColumnName("data_sort");

                    b.Property<int>("DataState")
                        .HasColumnName("data_state");

                    b.Property<int>("HotelId")
                        .HasColumnName("hotel_id");

                    b.Property<int>("MinibarId")
                        .HasColumnName("minibar_id")
                        .HasMaxLength(30);

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnName("room_number")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("update_time");

                    b.Property<int>("UpdaterId")
                        .HasColumnName("updater_id");

                    b.HasKey("Id");

                    b.ToTable("room_minibar");
                });

            modelBuilder.Entity("NTCore.DataModel.RoomProductPackageInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<int>("CreatorId")
                        .HasColumnName("creator_id");

                    b.Property<int>("DataSort")
                        .HasColumnName("data_sort");

                    b.Property<int>("DataState")
                        .HasColumnName("data_state");

                    b.Property<int>("HotelId")
                        .HasColumnName("hotel_id");

                    b.Property<int>("MinibarProductId")
                        .HasColumnName("minibar_product_id");

                    b.Property<string>("PackageCode")
                        .IsRequired()
                        .HasColumnName("package_code")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("PackageCount")
                        .HasColumnName("package_count");

                    b.Property<decimal>("PackagePrice")
                        .HasColumnName("package_price")
                        .HasColumnType("decimal(12,2)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("update_time");

                    b.Property<int>("UpdaterId")
                        .HasColumnName("updater_id");

                    b.HasKey("Id");

                    b.ToTable("room_product_package");
                });

            modelBuilder.Entity("NTCore.DataModel.UserGroupInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<int>("CreatorId")
                        .HasColumnName("creator_id");

                    b.Property<int>("DataSort")
                        .HasColumnName("data_sort");

                    b.Property<int>("DataState")
                        .HasColumnName("data_state");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnName("group_name")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("HotelId")
                        .HasColumnName("hotel_id");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("update_time");

                    b.Property<int>("UpdaterId")
                        .HasColumnName("updater_id");

                    b.HasKey("Id");

                    b.ToTable("user_group");
                });

            modelBuilder.Entity("NTCore.DataModel.UserGroupMemberInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<int>("CreatorId")
                        .HasColumnName("creator_id");

                    b.Property<int>("DataSort")
                        .HasColumnName("data_sort");

                    b.Property<int>("DataState")
                        .HasColumnName("data_state");

                    b.Property<int>("GroupId")
                        .HasColumnName("group_id");

                    b.Property<int>("HotelId")
                        .HasColumnName("hotel_id");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("update_time");

                    b.Property<int>("UpdaterId")
                        .HasColumnName("updater_id");

                    b.Property<int>("UserId")
                        .HasColumnName("userid");

                    b.HasKey("Id");

                    b.ToTable("user_group_member");
                });

            modelBuilder.Entity("NTCore.DataModel.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("AuthType")
                        .HasColumnName("auth_type");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnName("avatar")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("Confirmed")
                        .HasColumnName("confirmed");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<int>("CreatorId")
                        .HasColumnName("creator_id");

                    b.Property<int>("DataSort")
                        .HasColumnName("data_sort");

                    b.Property<int>("DataState")
                        .HasColumnName("data_state");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("EmployeeNumber")
                        .IsRequired()
                        .HasColumnName("employee_number")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("HotelId")
                        .HasColumnName("hotel_id");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnName("mobile_number")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnName("nickname")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("update_time");

                    b.Property<int>("UpdaterId")
                        .HasColumnName("updater_id");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("WorkReady")
                        .HasColumnName("work_ready");

                    b.HasKey("Id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("NTCore.DataModel.VerificationCodeInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<int>("CreatorId")
                        .HasColumnName("creator_id");

                    b.Property<int>("DataSort")
                        .HasColumnName("data_sort");

                    b.Property<int>("DataState")
                        .HasColumnName("data_state");

                    b.Property<int>("HotelId")
                        .HasColumnName("hotel_id");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnName("mobile_number")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("RequestId")
                        .IsRequired()
                        .HasColumnName("request_id")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("SendStatus")
                        .HasColumnName("send_status");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("update_time");

                    b.Property<int>("UpdaterId")
                        .HasColumnName("updater_id");

                    b.Property<string>("VerifyCode")
                        .IsRequired()
                        .HasColumnName("verify_code")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("verification_code");
                });

            modelBuilder.Entity("NTCore.DataModel.WelcomePlanInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<int>("CreatorId")
                        .HasColumnName("creator_id");

                    b.Property<int>("DataSort")
                        .HasColumnName("data_sort");

                    b.Property<int>("DataState")
                        .HasColumnName("data_state");

                    b.Property<int>("DataType")
                        .HasColumnName("data_type");

                    b.Property<DateTime>("Deadline")
                        .HasColumnName("deadline");

                    b.Property<DateTime>("FromTime")
                        .HasColumnName("fromtime");

                    b.Property<int>("HotelId")
                        .HasColumnName("hotel_id");

                    b.Property<int>("ShowDayType")
                        .HasColumnName("show_day_type");

                    b.Property<int>("SpecificDay")
                        .HasColumnName("specific_day");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("update_time");

                    b.Property<int>("UpdaterId")
                        .HasColumnName("updater_id");

                    b.Property<string>("WelcomeText")
                        .IsRequired()
                        .HasColumnName("welcome_text")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.ToTable("welcome_plan");
                });

            modelBuilder.Entity("NTCore.DataModel.WorkloadInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CheckTime")
                        .HasColumnName("check_time");

                    b.Property<int>("CheckUserId")
                        .HasColumnName("check_userid");

                    b.Property<decimal>("Coefficient")
                        .HasColumnName("coefficient")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<int>("CreatorId")
                        .HasColumnName("creator_id");

                    b.Property<int>("DataSort")
                        .HasColumnName("data_sort");

                    b.Property<int>("DataState")
                        .HasColumnName("data_state");

                    b.Property<int>("FinishStatus")
                        .HasColumnName("finish_status");

                    b.Property<DateTime>("FinishTime")
                        .HasColumnName("finish_time");

                    b.Property<string>("FromStatus")
                        .IsRequired()
                        .HasColumnName("from_status")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("HotelId")
                        .HasColumnName("hotel_id");

                    b.Property<bool>("IsChecked")
                        .HasColumnName("is_checked");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnName("message_text")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int>("RaletionId")
                        .HasColumnName("relation_id");

                    b.Property<int>("ReceiverId")
                        .HasColumnName("receiver_userid");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnName("room_number")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("StarTime")
                        .HasColumnName("start_time");

                    b.Property<string>("ToStatus")
                        .IsRequired()
                        .HasColumnName("to_status")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("update_time");

                    b.Property<int>("UpdaterId")
                        .HasColumnName("updater_id");

                    b.Property<int>("UserId")
                        .HasColumnName("userid");

                    b.Property<int>("WorkSeconds")
                        .HasColumnName("work_seconds");

                    b.Property<int>("WorkType")
                        .HasColumnName("work_type");

                    b.HasKey("Id");

                    b.ToTable("workload");
                });

            modelBuilder.Entity("NTCore.DataModel.WorkloadStepInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<int>("CreatorId")
                        .HasColumnName("creator_id");

                    b.Property<int>("DataSort")
                        .HasColumnName("data_sort");

                    b.Property<int>("DataState")
                        .HasColumnName("data_state");

                    b.Property<int>("HotelId")
                        .HasColumnName("hotel_id");

                    b.Property<int>("StepType")
                        .HasColumnName("step_type");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("update_time");

                    b.Property<int>("UpdaterId")
                        .HasColumnName("updater_id");

                    b.Property<int>("UserId")
                        .HasColumnName("userid");

                    b.Property<int>("WorkloadId")
                        .HasColumnName("workload_id");

                    b.HasKey("Id");

                    b.ToTable("workload_step");
                });
#pragma warning restore 612, 618
        }
    }
}
